<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.7.1" version="1.0">
  This file is intended to be loaded by Logisim (http://www.cburch.com/logisim/).

  <lib desc="#Wiring" name="0">
    <tool name="Constant">
      <a name="facing" val="south"/>
      <a name="value" val="0x0"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Base" name="2">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="XOR"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="2" map="Button2" name="Menu Tool"/>
    <tool lib="2" map="Button3" name="Menu Tool"/>
    <tool lib="2" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="2" name="Poke Tool"/>
    <tool lib="2" name="Edit Tool"/>
    <tool lib="2" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="facing" val="south"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="XOR">
    <a name="circuit" val="XOR"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <appear>
      <circ-port height="10" pin="140,460" width="10" x="95" y="65"/>
      <circ-port height="8" pin="180,90" width="8" x="86" y="46"/>
      <circ-port height="8" pin="110,90" width="8" x="66" y="46"/>
      <path d="M71,51 Q75,61 79,51" fill="none" stroke="#808080" stroke-width="2"/>
      <rect fill="none" height="30" stroke="#000000" stroke-width="2" width="50" x="50" y="50"/>
      <circ-anchor facing="east" height="6" width="6" x="97" y="57"/>
    </appear>
    <wire from="(50,110)" to="(110,110)"/>
    <wire from="(190,150)" to="(190,250)"/>
    <wire from="(50,110)" to="(50,150)"/>
    <wire from="(230,240)" to="(230,250)"/>
    <wire from="(120,320)" to="(120,360)"/>
    <wire from="(50,240)" to="(50,250)"/>
    <wire from="(160,320)" to="(160,360)"/>
    <wire from="(180,110)" to="(230,110)"/>
    <wire from="(160,320)" to="(210,320)"/>
    <wire from="(70,320)" to="(120,320)"/>
    <wire from="(140,410)" to="(140,460)"/>
    <wire from="(230,130)" to="(230,210)"/>
    <wire from="(50,150)" to="(190,150)"/>
    <wire from="(70,300)" to="(70,320)"/>
    <wire from="(110,90)" to="(110,110)"/>
    <wire from="(90,130)" to="(230,130)"/>
    <wire from="(180,90)" to="(180,110)"/>
    <wire from="(230,110)" to="(230,130)"/>
    <wire from="(210,300)" to="(210,320)"/>
    <wire from="(110,90)" to="(120,90)"/>
    <wire from="(90,130)" to="(90,250)"/>
    <wire from="(50,150)" to="(50,210)"/>
    <comp lib="1" loc="(210,300)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="inputs" val="2"/>
    </comp>
    <comp lib="0" loc="(180,90)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Y"/>
    </comp>
    <comp lib="0" loc="(140,460)" name="Pin">
      <a name="facing" val="north"/>
      <a name="output" val="true"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="1" loc="(230,240)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="0" loc="(110,90)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="X"/>
    </comp>
    <comp lib="1" loc="(50,240)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(284,40)" name="Text">
      <a name="text" val="Use minterm expansion to create an XOR gate using AND + OR gates"/>
    </comp>
    <comp lib="1" loc="(140,410)" name="OR Gate">
      <a name="facing" val="south"/>
      <a name="inputs" val="2"/>
    </comp>
    <comp lib="1" loc="(70,300)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="inputs" val="2"/>
    </comp>
  </circuit>
  <circuit name="ParityGenerator">
    <a name="circuit" val="ParityGenerator"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(80,170)" to="(140,170)"/>
    <wire from="(370,110)" to="(370,250)"/>
    <wire from="(350,510)" to="(350,520)"/>
    <wire from="(160,170)" to="(270,170)"/>
    <wire from="(70,130)" to="(70,150)"/>
    <wire from="(160,170)" to="(160,260)"/>
    <wire from="(140,110)" to="(370,110)"/>
    <wire from="(270,170)" to="(270,200)"/>
    <wire from="(210,200)" to="(250,200)"/>
    <wire from="(140,80)" to="(140,110)"/>
    <wire from="(70,150)" to="(170,150)"/>
    <wire from="(240,360)" to="(240,390)"/>
    <wire from="(180,200)" to="(210,200)"/>
    <wire from="(260,290)" to="(260,390)"/>
    <wire from="(150,360)" to="(240,360)"/>
    <wire from="(390,90)" to="(390,250)"/>
    <wire from="(80,290)" to="(80,390)"/>
    <wire from="(350,520)" to="(510,520)"/>
    <wire from="(90,200)" to="(180,200)"/>
    <wire from="(170,290)" to="(170,330)"/>
    <wire from="(140,170)" to="(160,170)"/>
    <wire from="(70,150)" to="(70,200)"/>
    <wire from="(330,410)" to="(330,460)"/>
    <wire from="(260,200)" to="(260,260)"/>
    <wire from="(100,330)" to="(170,330)"/>
    <wire from="(80,200)" to="(80,260)"/>
    <wire from="(180,200)" to="(180,260)"/>
    <wire from="(270,410)" to="(330,410)"/>
    <wire from="(210,80)" to="(210,90)"/>
    <wire from="(210,90)" to="(390,90)"/>
    <wire from="(110,410)" to="(150,410)"/>
    <wire from="(80,170)" to="(80,200)"/>
    <wire from="(170,150)" to="(260,150)"/>
    <wire from="(370,300)" to="(370,460)"/>
    <wire from="(70,130)" to="(350,130)"/>
    <wire from="(170,150)" to="(170,260)"/>
    <wire from="(210,90)" to="(210,200)"/>
    <wire from="(150,360)" to="(150,410)"/>
    <wire from="(70,80)" to="(70,130)"/>
    <wire from="(260,150)" to="(260,200)"/>
    <wire from="(270,200)" to="(270,260)"/>
    <wire from="(70,200)" to="(70,260)"/>
    <wire from="(90,200)" to="(90,260)"/>
    <wire from="(350,130)" to="(350,250)"/>
    <wire from="(100,330)" to="(100,390)"/>
    <wire from="(140,110)" to="(140,170)"/>
    <wire from="(250,200)" to="(250,260)"/>
    <comp lib="2" loc="(511,493)" name="Text">
      <a name="text" val="Output Bit"/>
    </comp>
    <comp lib="2" loc="(757,75)" name="Text">
      <a name="text" val="ONLY use: NOT, AND, OR, and any custom functions you write (included in the .circ submission)"/>
    </comp>
    <comp lib="0" loc="(70,80)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="X"/>
    </comp>
    <comp lib="2" loc="(141,27)" name="Text">
      <a name="text" val="Input Bits"/>
    </comp>
    <comp lib="2" loc="(768,112)" name="Text">
      <a name="text" val="Tyler Seliber"/>
    </comp>
    <comp lib="2" loc="(497,68)" name="Text"/>
    <comp loc="(110,400)" name="XOR">
      <a name="label" val="XOR"/>
      <a name="labelloc" val="west"/>
    </comp>
    <comp lib="1" loc="(350,510)" name="OR Gate">
      <a name="facing" val="south"/>
      <a name="inputs" val="2"/>
    </comp>
    <comp lib="2" loc="(726,24)" name="Text">
      <a name="text" val="Write your parity circuit here"/>
    </comp>
    <comp loc="(250,260)" name="Just1">
      <a name="label" val="Just1"/>
      <a name="labelloc" val="west"/>
    </comp>
    <comp loc="(270,400)" name="XOR">
      <a name="label" val="XOR"/>
      <a name="labelloc" val="west"/>
    </comp>
    <comp lib="1" loc="(370,300)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="2" loc="(767,137)" name="Text">
      <a name="text" val="I pledge my honor that I have abided by the Stevens Honor System."/>
    </comp>
    <comp loc="(70,260)" name="Just1">
      <a name="label" val="Just1"/>
      <a name="labelloc" val="west"/>
    </comp>
    <comp lib="2" loc="(743,54)" name="Text">
      <a name="text" val="the output = 1 if an odd number of inputs (1 or 3) are 1, otherwise 0"/>
    </comp>
    <comp loc="(160,260)" name="Just1">
      <a name="label" val="Just1"/>
      <a name="labelloc" val="west"/>
    </comp>
    <comp lib="0" loc="(210,80)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Z"/>
    </comp>
    <comp lib="0" loc="(140,80)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Y"/>
    </comp>
    <comp lib="0" loc="(510,520)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Parity"/>
    </comp>
  </circuit>
  <circuit name="Just1">
    <a name="circuit" val="Just1"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(130,80)" to="(130,150)"/>
    <wire from="(210,80)" to="(210,150)"/>
    <wire from="(190,210)" to="(210,210)"/>
    <wire from="(130,210)" to="(150,210)"/>
    <wire from="(100,340)" to="(100,390)"/>
    <wire from="(60,80)" to="(60,390)"/>
    <wire from="(190,210)" to="(190,230)"/>
    <wire from="(150,210)" to="(150,230)"/>
    <wire from="(100,340)" to="(170,340)"/>
    <wire from="(130,180)" to="(130,210)"/>
    <wire from="(210,180)" to="(210,210)"/>
    <wire from="(80,440)" to="(80,500)"/>
    <wire from="(170,280)" to="(170,340)"/>
    <comp lib="2" loc="(84,544)" name="Text">
      <a name="text" val="Output Bit"/>
    </comp>
    <comp lib="0" loc="(130,80)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Y"/>
    </comp>
    <comp lib="0" loc="(60,80)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="X"/>
    </comp>
    <comp lib="1" loc="(210,180)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="2" loc="(466,73)" name="Text">
      <a name="text" val="Returns 1 if and only if the first argument is 1 and the other two are 0."/>
    </comp>
    <comp lib="1" loc="(170,280)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="inputs" val="2"/>
    </comp>
    <comp lib="0" loc="(80,500)" name="Pin">
      <a name="facing" val="north"/>
      <a name="output" val="true"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Parity"/>
    </comp>
    <comp lib="1" loc="(80,440)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="inputs" val="2"/>
    </comp>
    <comp lib="0" loc="(210,80)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Z"/>
    </comp>
    <comp lib="1" loc="(130,180)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
  </circuit>
</project>
